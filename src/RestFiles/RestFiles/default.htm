<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>REST Files: GitHub-like file access with 1 page jQuery + 1 C# REST Service</title>
    <link href="css/default.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.5.min.js"></script>
</head>
<body>

<div id="header">
    <div id="header-links">
        <a href="../ServiceStack.Hello/">Hello World</a>
        <a href="../ServiceStack.MovieRest/">Nothing but REST!</a>
        <a href="../RedisStackOverflow/">Redis StackOverflow</a>
    </div>
    <a id="github" href="https://github.com/mythz/ServiceStack.Examples"><img src="img/btn-github.png" alt="ServiceStack.Examples project" /></a>
</div>
    
<div id="title">
    <h1><a href="http://www.servicestack.net">ServiceStack</a><b>/</b><a class="active" href="./">REST Files</a></h1>
</div>

<div id="info">
    GitHub-like online file access with 1 page jQuery + 1 page C# REST Service.
</div>

<div id="breadcrumb"></div>
<div id="ls"></div>
    
<script>
    String.prototype.rtrim = function() {
	    return this.replace(/\s+$/,"");
    }
    function fromDtoDate (dateStr) {
        return new Date(parseFloat(/Date\(([^)]+)\)/.exec(dateStr)[1]));
    } 
    function toTwitterTime (a) {
        var b = new Date();
        var c = typeof a == "date" ? a : new Date(a);
        var d = b - c;
        var e = 1000, minute = e * 60, hour = minute * 60, day = hour * 24, week = day * 7;
        if (isNaN(d) || d < 0) { return "" }
        if (d < e * 7) { return "right now" }
        if (d < minute) { return Math.floor(d / e) + " secs ago" }
        if (d < minute * 2) { return "about 1 min ago" }
        if (d < hour) { return Math.floor(d / minute) + " mins ago" }
        if (d < hour * 2) { return "about 1 hour ago" }
        if (d < day) { return Math.floor(d / hour) + " hours ago" }
        if (d > day && d < day * 2) { return "yesterday" }
        if (d < day * 365) { return Math.floor(d / day) + " days ago" } else { return "over a year ago" }
    }
    function enc(html) {
        if (typeof html != "string") return html;
        return html.replace('<','&lt;').replace('>','&gt;').replace('"','&quot;');
    }
            
    var href = "files/";
    $(document).click(function(e){
        var el = e.target;
        if (!el.getAttribute("href")) return;
        href = el.getAttribute("href");
        if (href.substr(0,1) == "." || href.substr(0,4) == "http") return;
        if (e.preventDefault) e.preventDefault();
        
        if (href.substr(0,2) === "#!") href = href.substr(2);
        if (e.ctrlKey || e.shiftKey) {
            window.open('#!' + href);
            return;
        }
        refresh();
    });

    var refresh = function(callback, skipPushState)
    {
        if (!skipPushState && window.history.pushState) 
            window.history.pushState(href, href.replace('/', ' / '), '#!' + href);
        
        var dirs = href.replace(/\/$/,"").split('/');
        var sb = '<div id="breadcrumb">';
        var sbDirs = "";
        for (var i=0; i<dirs.length; i++) {
            var dir = dirs[i];
            if (!dir) continue;
            sb += (i == dirs.length -1) 
                ? '<strong>' + dir + '</strong>'
                : '<a href="#!' + sbDirs + dir + '/">' + dir + '</a><b>/</b>';
            sbDirs += dir + "/";
        }
        $("#breadcrumb").html(sb + "</div>");
        
        $.get(href, function(r) {
            var sb = "<table><thead><tr><th>name</th><th>age</th><th>size</th></thead><tbody>";
            
            var dirList = r.Directory;
            if (dirList)
            {
                $.each(dirList.Folders, function(i, dir) {
                    sb += "<tr><td><a class='dir' href='#!" + href + dir.Name + "/'>" + dir.Name + "/<a></td><td>" 
                        + toTwitterTime(fromDtoDate(dir.ModifiedDate)) + "</td><td>" 
                        + dir.FileCount + " files</td>";
                });
                $.each(dirList.Files, function(i, file) {
                    sb += "<tr><td><a class='file' href='#!" + href + file.Name + "'>" + file.Name + "</a></td><td>" 
                        + toTwitterTime(fromDtoDate(file.ModifiedDate)) + "</td><td>" 
                        + file.FileSizeBytes + " bytes</td>";
                });
            }
            
            sb += "</tbody></table>";
                    
            $("#ls").html(sb); 
        });
    }
    
    window.onpopstate = function(e) {
        e = e || event;
        if (!e.state) return;
        href = e.state;
        refresh(null, true);
    };
    
    var hash = location.hash.indexOf('#!') === 0 && location.hash.substr(2);
    if (hash) href = hash;
    refresh();
    
</script>

  <!-- change the UA-XXXXX-X to be your site's ID -->
  <script>
   var _gaq = [['_setAccount', 'UA-XXXXX-X'], ['_trackPageview']];
   (function(d, t) {
    var g = d.createElement(t),
        s = d.getElementsByTagName(t)[0];
    g.async = true;
    g.src = ('https:' == location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    s.parentNode.insertBefore(g, s);
   })(document, 'script');
  </script>

</body>
</html>
